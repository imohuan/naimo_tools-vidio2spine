function h(l){const o=l*2+1,c=new Array(o),f=l/2,r=2*f*f;let p=0;for(let n=0;n<o;n++){const a=n-l;c[n]=Math.exp(-(a*a)/r),p+=c[n]}for(let n=0;n<o;n++)c[n]/=p;return c}function u(l,o,c,f){const r=h(f),p=r.length,n=Math.floor(p/2),a=new Float32Array(o*c);for(let t=0;t<c;t++)for(let s=0;s<o;s++){let e=0,y=0;for(let i=0;i<p;i++){const x=s+i-n;if(x>=0&&x<o){const m=t*o+x;e+=l[m]*r[i],y+=r[i]}}a[t*o+s]=e/y}for(let t=0;t<c;t++)for(let s=0;s<o;s++){let e=0,y=0;for(let i=0;i<p;i++){const x=t+i-n;if(x>=0&&x<c){const m=x*o+s;e+=a[m]*r[i],y+=r[i]}}l[t*o+s]=e/y}}function g(l,o,c,f){const r=f<0,p=Math.abs(f);for(let n=0;n<p;n++){const a=new Float32Array(l);for(let t=1;t<c-1;t++)for(let s=1;s<o-1;s++){const e=t*o+s,y=[a[e-o-1],a[e-o],a[e-o+1],a[e-1],a[e],a[e+1],a[e+o-1],a[e+o],a[e+o+1]];r?l[e]=Math.min(...y):l[e]=Math.max(...y)}}}function M(l,o,c,f,r,p){const n=(l+f)/2,a=l-f,t=o-r,s=c-p;return Math.sqrt((2+n/256)*a*a+4*t*t+(2+(255-n)/256)*s*s)}function k(l,o){if(!o||o.length===0)return;const c=l.data,f=l.width,r=l.height,p=document.createElement("canvas");p.width=f,p.height=r;const n=p.getContext("2d",{willReadFrequently:!0});if(!n)return;n.fillStyle="white";for(const t of o){if(n.beginPath(),t.type==="rect"&&t.points.length>=2){const s=Math.min(t.points[0].x,t.points[1].x),e=Math.min(t.points[0].y,t.points[1].y),y=Math.max(t.points[0].x,t.points[1].x),i=Math.max(t.points[0].y,t.points[1].y);n.rect(s,e,y-s,i-e)}else if(t.type==="circle"&&t.points.length>=2){const s=(t.points[0].x+t.points[1].x)/2,e=(t.points[0].y+t.points[1].y)/2,y=Math.abs(t.points[1].x-t.points[0].x)/2,i=Math.abs(t.points[1].y-t.points[0].y)/2;n.ellipse(s,e,y,i,0,0,Math.PI*2)}else if(t.type==="polygon"&&t.points.length>=3){n.moveTo(t.points[0].x,t.points[0].y);for(let s=1;s<t.points.length;s++)n.lineTo(t.points[s].x,t.points[s].y);n.closePath()}n.fill()}const a=n.getImageData(0,0,f,r).data;for(let t=0;t<c.length;t+=4)a[t+3]>0&&(c[t+3]=0)}export{g as a,u as b,M as c,k as d};
